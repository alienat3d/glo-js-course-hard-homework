'use strict';
/*
Кол-во попыток пользователя должно быть ограничено: 10

[✓] если пользовательское число больше, то бот выводит "Загаданное число меньше, осталось попыток ..." и предлагает ввести новый вариант;

[✓] если пользовательское число меньше, то бот выводит "Загаданное число больше, осталось попыток ..." и предлагает ввести новый вариант;

[✓] если пользователь вводит правильное число, то бот выводит "Поздравляю, Вы угадали!!! Хотели бы сыграть еще?", при нажатии ОК игра перезапускается (снова 10 попыток и новое загаданное число)

[✓] если пользователь ввел не число, то выводит сообщение "Введи число!" и предлагает ввести новый вариант;

[✓] если пользователь нажимает "Отмена", то игра выводит прощальное сообщение и завершается.

[✓] если закончились попытки то программа сообщает: "Попытки закончились, хотите сыграть еще?"

Программа должны быть выполнена с помощью рекурсии, без единого цикла.

Загаданное число и оставшиеся кол-во попыток должно храниться «в замыкании»
*/

const start = () => {
	const N = randomNumGenerator();
	let count = 1;

	function makeCounter() {
		let count = 0;

		return function () {
			count++;
			return count;
		};
	}

	function randomNumGenerator() {
		const num = Math.floor(Math.random() * (100 - 1 + 1)) + 1;
		return num;
	}

	let gamesCounter = makeCounter();

	function ask() {
		if (count <= 10) {
			const num = prompt('Угадайте число от 1 до 100');

			switch (true) {
				case num === null:
					alert('Игра окончена.\nОбновите страницу, чтобы сыграть еще раз. (F5 на клавиатуре)');
					break;
				case +num < 1 || +num > 100:
					alert('Загаданное число должно быть в диапазоне между 1 и 100 включительно. Попробуйте снова!');
					ask();
					break;
				case +num === N:
					const oneMore = confirm('Поздравляю, Вы угадали!!!\nХотите сыграть ещё раз?');
					if (oneMore) start();
					break;
				case +num > N:
					alert(`Загаданное число меньше предложенного вами числа. Попробуйте снова!\n(Осталось попыток: ${10 - count})`);
					count = gamesCounter();
					ask();
					break;
				case +num < N:
					alert(`Загаданное число больше предложенного вами числа. Попробуйте снова!\n(Осталось попыток: ${10 - count})`);
					count = gamesCounter();
					ask();
					break;
				default:
					alert(`Неправильный ввод. ¯\\_(ツ)_/¯ Попробуйте снова!\n(Осталось попыток: ${10 - count})`);
					ask();
					break;
			}
		} else {
			const oneMore = confirm('Ваши 10 попыток угадать закончились. Игра окончена. ¯\\_(ツ)_/¯\nХотите сыграть ещё раз?');
			if (oneMore) start();
		}
	}
	count = gamesCounter();
	ask();
}

start();