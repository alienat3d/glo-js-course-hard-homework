'use strict';
/*
Кол-во попыток пользователя должно быть ограничено: 10

— если пользовательское число больше, то бот выводит "Загаданное число меньше, осталось попыток ..." и предлагает ввести новый вариант;

— если пользовательское число меньше, то бот выводит "Загаданное число больше, осталось попыток ..." и предлагает ввести новый вариант;

— если пользователь вводит правильное число, то бот выводит "Поздравляю, Вы угадали!!! Хотели бы сыграть еще?", при нажатии ОК игра перезапускается (снова 10 попыток и новое загаданное число)

— если пользователь ввел не число, то выводит сообщение "Введи число!" и предлагает ввести новый вариант;

— если пользователь нажимает "Отмена", то игра выводит прощальное сообщение и завершается.

— если закончились попытки то программа сообщает: "Попытки закончились, хотите сыграть еще?"

Программа должны быть выполнена с помощью рекурсии, без единого цикла.

Загаданное число и оставшиеся кол-во попыток должно храниться «в замыкании»
*/

function start() {
	let counter = 0;
	if (counter < 3) {
		function ask() {
			const n = 33;
			const num = prompt('Угадайте число от 1 до 100');
			const isNan = function (num) {
				return !isNaN(parseFloat(num) && isFinite(num));
			}

			switch (true) {
				case (+num < 1 || +num > 100):
					alert('Загаданное число должно быть в диапазоне между 1 и 100 включительно. Попробуйте снова!');
					return counter++;
				case (+num === n):
					alert('Поздравляю, Вы угадали!!!\nОбновите страницу, чтобы сыграть еще раз. (F5 на клавиатуре)');
					return counter = 10;
				case +num > n:
					alert('Загаданное число меньше предложенного вами числа. Попробуйте снова!');
					return counter++;
				case +num < n:
					alert('Загаданное число больше предложенного вами числа. Попробуйте снова!');
					return counter++;
				case num === null:
					alert('Игра окончена.\nОбновите страницу, чтобы сыграть еще раз. (F5 на клавиатуре)');
					return counter = 10;
				case isNan():
					alert('Упс, кажется вы ввели вовсе не цифру! Попробуйте снова!');
					break;
			}
			return counter;
		}
		ask();
		return counter;
	} else {
		alert('Ваше количество попыток на угадывание загаданного числа закончилось, вы проиграли. ¯\\_(ツ)_/¯')
	}
}

start();