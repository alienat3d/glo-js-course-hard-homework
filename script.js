'use strict';
/*
Кол-во попыток пользователя должно быть ограничено: 10

— если пользовательское число больше, то бот выводит "Загаданное число меньше, осталось попыток ..." и предлагает ввести новый вариант;

— если пользовательское число меньше, то бот выводит "Загаданное число больше, осталось попыток ..." и предлагает ввести новый вариант;

— если пользователь вводит правильное число, то бот выводит "Поздравляю, Вы угадали!!! Хотели бы сыграть еще?", при нажатии ОК игра перезапускается (снова 10 попыток и новое загаданное число)

— если пользователь ввел не число, то выводит сообщение "Введи число!" и предлагает ввести новый вариант;

— если пользователь нажимает "Отмена", то игра выводит прощальное сообщение и завершается.

— если закончились попытки то программа сообщает: "Попытки закончились, хотите сыграть еще?"

Программа должны быть выполнена с помощью рекурсии, без единого цикла.

Загаданное число и оставшиеся кол-во попыток должно храниться «в замыкании»
*/
const ATTEMPTS = 2;

function start(i) {
	console.log(i);
	if (i > 0) {
		function ask(i) {
			const n = 33;
			const num = prompt('Угадайте число от 1 до 100');
			const isNan = function (num) {
				return !isNaN(parseFloat(num) && isFinite(num));
			}

			if (+num < 1 || +num > 100) {
				alert('Загаданное число должно быть в диапазоне между 1 и 100 включительно. Попробуйте снова!\nОсталось попыток: ' + i);
				return ask(i - 1);
			} else if (+num === n) {
				alert('Поздравляю, Вы угадали!!!\nОбновите страницу, чтобы сыграть еще раз. (F5 на клавиатуре)');
				return ask(0);
			} else if (+num > n) {
				alert('Загаданное число меньше предложенного вами числа. Попробуйте снова!\nОсталось попыток: ' + i);
				return i--;
			} else if (+num < n) {
				alert('Загаданное число больше предложенного вами числа. Попробуйте снова!\nОсталось попыток: ' + i);
				return i--;
			} else if (num === null) {
				alert('Игра окончена.\nОбновите страницу, чтобы сыграть еще раз. (F5 на клавиатуре)');
				return i = 0;
			} else if (isNan()) {
				alert('Упс, кажется вы ввели вовсе не цифру! ¯\\_(ツ)_/¯ Попробуйте снова!');
				return;
			} else {
				alert('Упс, кажется что-то пошло не так! ¯\\_(ツ)_/¯ Попробуйте снова!');
				return;
			}

			/* switch (true) {
				case (+num < 1 || +num > 100):
					alert('Загаданное число должно быть в диапазоне между 1 и 100 включительно. Попробуйте снова!\nОсталось попыток: ' + i);
					break;
				case (+num === n):
					alert('Поздравляю, Вы угадали!!!\nОбновите страницу, чтобы сыграть еще раз. (F5 на клавиатуре)');
					i === 0;
					break;
				case +num > n:
					alert('Загаданное число меньше предложенного вами числа. Попробуйте снова!\nОсталось попыток: ' + i);
					break;
				case +num < n:
					alert('Загаданное число больше предложенного вами числа. Попробуйте снова!');
					break;
				case num === null:
					alert('Игра окончена.\nОбновите страницу, чтобы сыграть еще раз. (F5 на клавиатуре)');
					break;
				case isNan():
					alert('Упс, кажется вы ввели вовсе не цифру! Попробуйте снова!');
					break;
			} */
		}
		start(i - 1);
		ask();
		return ask;
	} else {
		const moreQuestion = confirm('Ваши 10 попыток закончились, хотите сыграть еще?');
		if (moreQuestion) {
			start(ATTEMPTS);
		} else {
			alert('Спасибо за игру! Приходите ещё! :-)');
			return;
		}
	}
}

start(ATTEMPTS);